#!/bin/sh
# This script is only used for developement. It is removed by the
# distribution process.

set -e

OCAMLBUILD=${OCAMLBUILD:="ocamlbuild -tag debug -classic-display \
                          -tags color(always) -use-ocamlfind -cflags -warn-error,+A" }

# hack to avoid depending on result package
#RESULT="src/conex_result.mli"
#V=$(ocamlc -version)
#MAJOR=$(echo $V | cut -d '.' -f 1)
#MINOR=$(echo $V | cut -d '.' -f 2)
#if [ $MAJOR -ge 4 -a $MINOR -ge 3 ] ; then
#    echo > $RESULT
#fi

action ()
{
    case $1 in
        default) action lib ; action bin ;;
        analysis) action lib ; $OCAMLBUILD analysis/opam_repo_stats.native ; $OCAMLBUILD analysis/maintainer.native ;;
        bin) action lib ;
#             $OCAMLBUILD app/conex_author.native ;
             $OCAMLBUILD app/conex_verify_app.native ;;
        lib) $OCAMLBUILD conex.cma conex.cmxa ;
             $OCAMLBUILD conex_nocrypto.cma conex_nocrypto.cmxa ;;
        test) action lib ; $OCAMLBUILD test/tests.native ; ./tests.native -q ;;
        coverage)
            action clean ;
            export OCAMLBUILD="$OCAMLBUILD -pkg bisect_ppx" ;
            action lib ;
            $OCAMLBUILD test/tests.native ;
            ./tests.native ;
            bisect-ppx-report -I _build/ -html coverage/ bisect0001.out ;;
        clean) $OCAMLBUILD -clean ; rm -rf _tests ; rm -f tests.native conex_author.native maintainer.native opam_repo_stats.native ; rm -rf coverage ; rm -f bisect*out ;;
        *) $OCAMLBUILD $* ;;
    esac
}

if [ $# -eq 0 ];
then action default ;
else action $*; fi

# hack to avoid depending on result package
#if [ $MAJOR -ge 4 -a $MINOR -ge 3 ] ; then
#    echo "type ('a, 'b) result = Ok of 'a | Error of 'b" > $RESULT
#fi
